name: Windows Builds

on:
  workflow_dispatch:
  workflow_call:
  push:
  pull_request:

env:
  QT_VERSION:              "6.9.0"
  BUILD_TYPE:              Release
  artifact_retention_days: 5

permissions:
  id-token: write
  attestations: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
            - os: windows-latest
              QT_HOST: "windows"
              QT_ARCH: "win64_msvc2022_64"
              ARCH: x64
            - os: windows-11-arm
              QT_HOST: "windows_arm64"
              QT_ARCH: "win64_msvc2022_arm64"
              ARCH: arm64
    runs-on: ${{ matrix.os }}
    steps:
    - name: Prepare git
      run: |-
        git config --global core.symlinks true
    - uses: ilammy/setup-nasm@v1
      with:
        version: '2.16.03'
    - name: install qt
      uses: jurplel/install-qt-action@v4
      with:
        host: ${{ env.QT_HOST }}
        target: 'desktop'
        modules: 'qtimageformats'
        version: ${{ env.QT_VERSION }}
        arch: ${{ matrix.QT_ARCH }}
        dir: "${{runner.workspace}}/qt"
        install-deps: "true"
        cache: true
        setup-python: false
    - name: install graphviz
      run: choco install graphviz
    - name: update WiX
      run: |
        dotnet tool update --global wix --version 6.0.1
        wix --version
        wix extension add --global WixToolset.UI.wixext/6.0.1
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Configure build for ${{ matrix.ARCH }}
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.ARCH }}
    -
      name: build 3rd-party sources [configuration]
      working-directory: ${{github.workspace}}\..
      env:
        CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}
      run: |
        cmake -DBUILD_DEPENDENCIES=ON -A ${{ matrix.ARCH }} -G "Visual Studio 17 2022" -Bbuild ${{github.workspace}} -Wno-dev

    -
      name: build 3rd-party sources
      working-directory: ${{github.workspace}}\..
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}}

    -
      name: build sources [configuration]
      working-directory: ${{github.workspace}}\..
      env:
        CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}
      run: |
        cmake -DBUILD_DEPENDENCIES=OFF -A ${{ matrix.ARCH }} -G "Visual Studio 17 2022" -Bbuild ${{github.workspace}} -Wno-dev -DINSTALL_SYSTEM_RUNTIME=1

    -
      name: build sources
      working-directory: ${{github.workspace}}\..
      env:
        VCINSTALLDIR: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\"
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}} --target package

        cd build
        $artifact_path = pwd
        echo "artifact_path=$artifact_path" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        $name = Get-Childitem -Filter *.zip -Name
        echo "artifact_name_zip=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        $name = Get-Childitem -Filter *.7z -Name
        echo "artifact_name_7z=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        $name = Get-Childitem -Filter *.msi -Name
        echo "artifact_name_msi=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

#    - name: archive sandbox
#      uses: actions/upload-artifact@v4
#      if: always()
#      with:
#        name: sandbox-${{ matrix.ARCH }}.zip
#        path: |
#          C:/a/vooki-image-viewer
#        if-no-files-found: ignore
#        retention-days: 9

    - name: archive log from C [msi]
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: wix_msi_log-${{ matrix.ARCH }}.zip
        path: |
          C:/a/vooki-image-viewer/build/_CPack_Packages/win64/WIX/wix.log
        if-no-files-found: ignore
        retention-days: 9


    - name: archive log from D [msi]
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: wix_msi_log-${{ matrix.ARCH }}.zip
        path: |
          D:/a/vooki-image-viewer/build/_CPack_Packages/win64/WIX/wix.log
        if-no-files-found: ignore
        retention-days: 9

    - name: attest build provenance
      uses: actions/attest-build-provenance@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        subject-path: |
          ${{env.artifact_path}}\${{env.artifact_name_zip}}
          ${{env.artifact_path}}\${{env.artifact_name_7z}}
          ${{env.artifact_path}}\${{env.artifact_name_msi}}

    - name: archive artifacts [zip]
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.artifact_name_zip}}
        path: |
          ${{env.artifact_path}}\${{env.artifact_name_zip}}
        retention-days: ${{ inputs.artifact_retention_days }}
    - name: archive artifacts [7z]
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.artifact_name_7z}}
        path: |
          ${{env.artifact_path}}\${{env.artifact_name_7z}}
        retention-days: ${{ inputs.artifact_retention_days }}
    - name: archive artifacts [msi]
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.artifact_name_msi}}
        path: |
          ${{env.artifact_path}}\${{env.artifact_name_msi}}
        retention-days: ${{ inputs.artifact_retention_days }}
    - name: release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: |
          ${{env.artifact_path}}\${{env.artifact_name_zip}}
          ${{env.artifact_path}}\${{env.artifact_name_7z}}
          ${{env.artifact_path}}\${{env.artifact_name_msi}}
